{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/Chart/Chart.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","App.js","index.js","components/Footer/Footer.module.css","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Chart","country","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","url","fetchData","a","changeableUrl","axios","get","console","log","fetchCountries","countries","map","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","alignItems","direction","Tooltip","placement","Button","Code","Loyalty","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d188380b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3kVdR\",\"card\":\"Cards_card__3Goh2\",\"infected\":\"Cards_infected__tG3LT\",\"recovered\":\"Cards_recovered__1a2ro\",\"deaths\":\"Cards_deaths__VyHzK\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { fetchDailyData } from \"../../api\";\r\n// import { Line, Bar } from \"react-chartjs-2\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({\r\n  data: { confirmed, recovered, deaths, lastUpdate },\r\n  country,\r\n}) => {\r\n  // const [dailyData, setDailyData] = useState([]);\r\n  // useEffect(() => {\r\n  //   const fetchAPI = async () => {\r\n  //     setDailyData(await fetchDailyData());\r\n  //   };\r\n  //   fetchAPI();\r\n  // }, []);\r\n\r\n  // const lineChart = dailyData.length > 0 ? (\r\n  //   <Line\r\n  //     data={{\r\n  //       labels: dailyData.map(({ date }) => date),\r\n  //       datasets: [\r\n  //         {\r\n  //           data: dailyData.map(({ confirmed }) => confirmed),\r\n  //           label: \"Infected\",\r\n  //           borderColor: \"#3333ff\",\r\n  //           fill: true,\r\n  //         },\r\n  //         {\r\n  //           data: dailyData.map(({ deaths }) => deaths),\r\n  //           label: \"Deaths\",\r\n  //           borderColor: \"red\",\r\n  //           backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n  //           fill: true,\r\n  //         },\r\n  //       ],\r\n  //     }}\r\n  //   />\r\n  // ) : null;\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: {\r\n          display: true,\r\n          text: country ? `Current stats in ${country}` : \"Global stats\",\r\n        },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    // <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n    <div className={styles.container}>{barChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeableUrl);\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, [fetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Code, Loyalty } from \"@material-ui/icons\";\r\n\r\nimport styles from \"./Footer.module.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <Grid container justify=\"center\" className={styles.container}>\r\n      <Grid item xs={6} alignItems=\"flex-start\" direction=\"column\">\r\n        <Tooltip title=\"Developed by\" placement=\"left-start\">\r\n          <Button>\r\n            <Code />\r\n            <Typography variant=\"h7\" className={styles.name}>\r\n              ARUNMOZHI S\r\n            </Typography>\r\n          </Button>\r\n        </Tooltip>\r\n      </Grid>\r\n      <Grid item container xs={6} alignItems=\"flex-end\" direction=\"column\">\r\n        <Grid item>\r\n          <Tooltip title=\"Credits\" placement=\"right-start\">\r\n            <Button>\r\n              <Loyalty />\r\n              <Typography variant=\"h7\" className={styles.name}>\r\n                JS MASTERY\r\n              </Typography>\r\n            </Button>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Cards, Chart, CountryPicker, Footer } from \"./components\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from \"./api\";\r\nimport coronaImage from \"./images/covid.png\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__Kc72o\",\"name\":\"Footer_name__2j6as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__wxD-z\",\"image\":\"App_image__t0jIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__jT6oY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__s9m8w\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";"],"sourceRoot":""}